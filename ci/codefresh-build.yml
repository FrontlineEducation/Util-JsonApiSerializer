version: '1.0'
mode: sequential
stages: [ 'checkout', 'build', 'Scan', 'push', 'notify' ]

steps:
  main_clone:
    title: Cloning main repository...
    fail_fast: false
    type: git-clone
    repo: '${{CF_REPO_OWNER}}/${{CF_REPO_NAME}}'
    revision: '${{CF_REVISION}}'
    git: FrontlineEducation
    stage: checkout

  list_directory:
    when: {steps: [{name: main_clone, on: [success]}]}
    title: List Directory
    stage: checkout
    image: mcr.microsoft.com/dotnet/sdk:6.0
    fail_fast: false
    commands:
      - find "$PWD"

  BumpTagVersion:
    when: {steps: [{name: main_clone, on: [success]}]}
    title: Bump Tag Version
    image: ${{ECR}}/sys-tagging
    fail_fast: false
    commands: [ 'bump_tag_version.sh' ]
    stage: build

  BuildingDockerImage:
    when: {steps: [{name: BumpTagVersion, on: [success]}]}
    title: Building Docker Image
    fail_fast: false
    stage: build
    type: build
    image_name: ${{CF_BRANCH_TAG_NORMALIZED_LOWER_CASE}}
    disable_push:  true
    build_arguments:
      - releaseType=${{RELEASE_TYPE}}
      - nugetconfig=${{nugetconfig}}
      - nugetUri=${{nugetUri}}
      - nugetApiKey=${{nugetApiKey}}
      - nugetVersion=${{TAG}}
      - branchName=${{CF_BRANCH}}

  SnykScanningCode:
    when: {steps: [{name: BuildingDockerImage, on: [success]}]}
    title: Snyk Code Scan
    stage: Scan
    image: snyk/snyk-cli:python-3.6
    commands:
        - snyk auth ${SNYK_TOKEN} 
        - snyk code test --org=${{ORGANIZATION_ID}} --json --severity-threshold=high || true

  SonarScanning:
    when: {steps: [{name: BuildingDockerImage, on: [success]}]}
    title: Running Sonar Analysis
    stage: Scan
    image: sonarsource/sonar-scanner-cli:4.6
    commands:
        - "sonar-scanner -Dsonar.host.url=${SONAR_URL} -Dsonar.login=${SONAR_TOKEN} -Dsonar.projectKey=cf_${{CF_REPO_NAME}} -Dsonar.projectName=cf_${{CF_REPO_NAME}} -Dsonar.sources=./ -Dsonar.projectBaseDir=/codefresh/volume/${{CF_REPO_NAME}}/ -Dsonar.projectVersion=${TAG} -Dsonar.branch.name=${{CF_BRANCH}}"
 
  PushTag:
    when: {steps: [{name: BuildingDockerImage, on: [success]}]}
    title: Push Tag
    stage: push
    image: ${{ECR}}/sys-tagging
    fail_fast: false
    commands: [ 'push_tag.sh' ]
    
      
   
  slack-notify-failure:
    when:
      steps:
       any:
        - name: main_clone
          on:
           - failure
        - name: list_directory
          on:
           - failure
        - name: BumpTagVersion
          on:
           - failure
        - name: BuildingDockerImage
          on:
           - failure
        - name: PushTag
          on:
           - failure
    stage: notify
    image: cfcommunity/slack-notification-resource
    commands: 
     - 'echo ${{SLACK_FAILURE}} | /opt/resource/out .' 
     - exit 1 

  slack-notify-success:
    when:
      steps:
       all:
        - name: main_clone
          on:
           - success
        - name: list_directory
          on:
           - success
        - name: BumpTagVersion
          on:
           - success
        - name: BuildingDockerImage
          on:
           - success
        - name: PushTag
          on:
           - success
    stage: notify
    image: cfcommunity/slack-notification-resource
    commands: 
     - 'echo ${{SLACK_SUCCESS}} | /opt/resource/out .' 
     - exit 0 
